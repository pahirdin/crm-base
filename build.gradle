buildscript {
    ext{
        pluginRepository = "http://10.13.3.17:18081/repository/maven-thirdparty"
        bitsVersion = "1.0.0-SNAPSHOT"
        wadeVersion = "5.5.1-SNAPSHOT"
        springVersion = "2.1.12.RELEASE"
        distDir = System.getProperty("distDir")
    }
    repositories {
        mavenLocal()
        maven { url "${pluginRepository}" }
    }
    dependencies {
        classpath("io.freefair.gradle:lombok-plugin:4.1.6")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springVersion}")
    }
}

def env=System.getProperty("profile") ?:"dev"
if (env == 'prd') {
    apply from:"config-prd.gradle"
} else {
    apply from:"config-dev.gradle"
}

group 'com.asiainfo.crm'
version "1.0.0-SNAPSHOT"

apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    dependencies {
        dependency "org.springframework:spring-data-redis:${springVersion}"
        dependency "com.google.guava:guava:20.0"
        dependency "log4j:log4j:1.2.17"
    }
}

project.configurations.all {
    resolutionStrategy {
        // check for updates
        cacheChangingModulesFor 2, 'minutes'
    }
}

subprojects {

    //引入插件
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: "io.freefair.lombok"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.compilerArgs << '-parameters'
    }

    //发布配置
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "${deployRepository}") {
                    authentication(userName: "${deployUserName}", password: "${deployPassword}")
                }
                pom.groupId = rootProject.group;
                pom.artifactId = project.name;
                pom.version = rootProject.version;
                pom.project {
                    description 'crm-base'
                    url 'http://git.wadecn.com:18084/south-china/base.git'
                }
            }
        }
    }

    repositories {
        mavenLocal()
        maven { url "${publicRepository}" }
    }

    task releaseJar(type: Copy){
        if( null == distDir || "".equals(distDir.trim()) ){
            return;
        }
        from 'build/libs'
        into "${distDir}/jars"
        exclude "*-BOOT.jar"
    }

    jar.finalizedBy("releaseJar")

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    configurations {
        //传递依赖引入的log4j-1.2.16存在bug，且应用必须统一使用slf4j
        implementation.exclude group: "log4j", module: "log4j"
        compile.exclude group: "log4j", module: "log4j"
        testCompile.exclude group: "log4j", module: "log4j"
    }

    //公共依赖
    dependencies {
        runtimeOnly "log4j:log4j:1.2.17"

        annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
        compileOnly "org.mapstruct:mapstruct-processor:1.3.1.Final"
        testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
        testCompileOnly "org.mapstruct:mapstruct-processor:1.3.1.Final"
    }
}